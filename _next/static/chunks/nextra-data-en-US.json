{"/blockchains":{"title":"Blockchains","data":{"":"The table below documents which blockchains are supported. The Ecosystem column documents the family of blockchains the blockchain belongs to. The Blockchain column documents the blockchain's homepage and human-readable name in order to prevent confusion in case there are multiple blockchains having the same name. The Network column documents the name of the network being used which is useful to know if it's a testnet, etc. The ID column lists every possible value for the \"blockchain\" field in RabbitMQ messages.\nEcosystem\tBlockchain\tNetwork\tID\tCosmos\tCosmos Hub\tcosmoshub-4\t\"cosmosHub\"\tCosmos\tTerra 2.0\tphoenix-1\t\"terra2\"\tCosmos\tOmniFlix\tomniflixhub-1\t\"omniFlix\"\tCosmos\tCrescent\tcrescent-1\t\"crescent\"\tCosmos\tKava\tkava_2222-10\t\"kava\"\tCosmos\tOsmosis\tosmosis-1\t\"osmosis\"\tCosmos\tJuno\tjuno-1\t\"juno\"\tCosmos\tAkash\takashnet-2\t\"akash\"\tCosmos\tAxelar\taxelar-dojo-1\t\"axelar\"\tCosmos\te-Money\temoney-3\t\"eMoney\"\tCosmos\tPersistence\tcore-1\t\"persistence\"\tCosmos\tStargaze\tstargaze-1\t\"stargaze\"\tCosmos\tSifchain\tsifchain-1\t\"sifchain\"\tCosmos\tSommelier\tsommelier-3\t\"sommelier\"\tCosmos\tUmee\tumee-1\t\"umee\"\tCosmos\tAssetMantle\tmantle-1\t\"assetMantle\"\tCosmos\tKujira\tkaiyo-1\t\"kujira\"\tCosmos\tInjective\tinjective-1\t\"injective\"\tCosmos\tStride\tstride-1\t\"stride\"\tCosmos\tCheqd\tcheqd-mainnet-1\t\"cheqd\"\tCosmos\tLikeCoin\tlikecoin-mainnet-2\t\"likeCoin\"\tCosmos\tChihuahua\tchihuahua-1\t\"chihuahua\"\tCosmos\tGravity Bridge\tgravity-bridge-3\t\"gravityBridge\"\tCosmos\tIRISnet\tirishub-1\t\"irisNet\"\tCosmos\tStarname\tiov-mainnet-ibc\t\"starname\"\tCosmos\tFetch\tfetchhub-4\t\"fetch\"\tCosmos\tDesmos\tdesmos-mainnet\t\"desmos\"\tCosmos\tTeritori\tteritori-1\t\"teritori\"\tCosmos\tAgoric\tagoric-3\t\"agoric\"\tCosmos\tSecret\tsecret-4\t\"secret\"\tCosmos\tEvmos\tevmos_9001-2\t\"evmos\"\tCosmos\tCanto\tcanto_7700-1\t\"canto\"\tCosmos\tComdex\tcomdex-1\t\"comdex\"\tCosmos\tBitsong\tbitsong-2b\t\"bitSong\"\tCosmos\tSei\tatlantic-1\t\"sei\"\tCosmos\tMars\tmars-1\t\"mars\"\tCosmos\tBitCanna\tbitcanna-1\t\"bitCanna\"\tCosmos\tCarbon\tcarbon-1\t\"carbon\"\tCosmos\tCudos\tcudos-1\t\"cudos\"\tCosmos\tDecentr\tmainnet-3\t\"decentr\"\tNear\tNear\tmainnet\t\"near\""}},"/":{"title":"Leap Wallet Webhook Service","data":{"":"The current flow to get notified of a transaction is to:\nContinuously query an RPC node. This can be cumbersome as Cosmos RPC nodes tend to be unreliable as they’re free to use which means that you’d potentially have to monitor and pay for your own.\nLearn and implement transaction parsing for your use cases. Due to a lack of documentation, this can mean having to reverse engineer multiple Golang codebases.\n\nUsing Leap Wallet’s webhook service, you can easily get notified of transactions that you’re interested in using the following flow:\nGive us a webhook URL. For example, https://example.com/new-transaction.\nGive us the blockchain that you’re interested in receiving transactions for (check [blockchains.md](http://blockchains.md) in the docs linked below).\nGive us the transaction types that you’re interested in receiving (only certain transactions  are supported), then give us the message types such as cosmos.bank.send listed in the docs([messages.md](http://messages.md)).\nIf your server is protected and won't accept requests without an authentication header, please ensure that you provide us the required token (as mentioned in the form).\nOnce you fill up the form correctly and submit, we will send you a Verification Key on the provided webhook URL. You will need to submit that key in order to complete the creation of the webhook."}},"/messages":{"title":"Messages","data":{"":"Each message is a JSON object. Dates are in simplified extended ISO format (ISO 8601), which is always 24 or 27 characters long (YYYY-MM-DDTHH:mm:ss.sssZ or ±YYYYYY-MM-DDTHH:mm:ss.sssZ, respectively). The timezone is always zero UTC offset, as denoted by the suffix \"Z\".There are four fields common to every JSON object which are \"__type\" (used to discern how the data structure should be parsed), \"blockchain\" (which blockchain the transaction was executed on), \"txHash\" (the transaction's hash), and \"isSuccessful\" (whether the transaction succeeded or failed). JSON objects for Cosmos transactions additionally have a \"memo\" field in common which is an optional note the user added while making the transaction such as \"\" or \"I owed you 1.5 ATOM since you paid for lunch.\".Here are the messages that can be sent:\ncosmos.authz.exec\ncosmos.authz.grant\ncosmos.authz.revoke\ncosmos.bank.multiSend\ncosmos.bank.send\ncosmos.feeGrant.grantAllowance\ncosmos.feeGrant.revokeAllowance\ncosmos.gov.deposit\ncosmos.gov.submitProposal\ncosmos.gov.vote\ncosmos.slashing.unjail\ncosmos.staking.beginRedelegate\ncosmos.staking.createValidator\ncosmos.staking.delegate\ncosmos.staking.editValidator\ncosmos.staking.undelegate\ncosmos.ibc.send\ncosmos.ibc.receive\ncosmos.gamm.create\ncosmos.gamm.exit\ncosmos.gamm.exitExactAndSwap\ncosmos.gamm.exitMaxAndSwap\ncosmos.gamm.join\ncosmos.gamm.swapExact\ncosmos.gamm.swapExactAndJoin\ncosmos.gamm.swapMax\ncosmos.gamm.swapMaxAndJoin\ncosmos.lockup.lock\ncosmos.lockup.unlock\ncosmos.lockup.unlockAll\ncosmos.superfluid.delegate\ncosmos.superfluid.undelegate\ncosmos.superfluid.lockAndDelegate\ncosmos.superfluid.unlockAndUndelegate\nnear.staking.stake\nnear.staking.unstake\nnear.staking.unstakeAll\nnear.staking.withdrawAll\nnear.transfer.native\nnear.transfer.nonNative\nnear.social.set\nnear.social.set.follow\nnear.social.set.like\nnear.social.set.poke"}},"/msgs/authz/exec":{"title":"cosmos.authz.exec","data":{"":"A transaction executed by the grantee on behalf of the granter.","schema#Schema":"Field\tRequired\tData type\tExplanation\tExample\t__type\tYes\tstring\tAlways \"cosmos.authz.exec\".\t\"cosmos.authz.exec\"\tblockchain\tYes\tstring\tThe blockchain this transaction was executed on. This field will have one of the values in the ID column where the Ecosystem column's value is Cosmos.\t\"juno\"\ttxHash\tYes\tstring\tThe transaction's hash.\t\"DBAD2F68E6CEF64B8EA29F47B2765CED53CB1552AE6422C98974C8D4DA8869F8\"\tisSuccessful\tYes\tboolean\tWhether the transaction succeeded or failed.\ttrue\tmemo\tYes\tstring\tA note the user added while making the transaction. Maybe be empty (\"\").\t\"I owed you 1.5 ATOM since you paid for lunch.\"\tgrantee\tYes\tstring\tThe account executing the transaction on behalf of another account.\t\"cheqd1ftaxf307mumu6gwg05q360xeryspcgsqgvq66z\"","example#Example":"{\n\"__type\": \"cosmos.authz.exec\",\n\"blockchain\": \"juno\",\n\"txHash\": \"DBAD2F68E6CEF64B8EA29F47B2765CED53CB1552AE6422C98974C8D4DA8869F8\",\n\"isSuccessful\": true,\n\"memo\": \"\",\n\"grantee\": \"cheqd1ftaxf307mumu6gwg05q360xeryspcgsqgvq66z\"\n}"}},"/msgs/authz/grant":{"title":"cosmos.authz.grant","data":{"":"An authorization grant which was created.","schema#Schema":"Field\tRequired\tData type\tExplanation\tExample\t__type\tYes\tstring\tAlways \"cosmos.authz.grant\".\t\"cosmos.authz.grant\"\tblockchain\tYes\tstring\tThe blockchain this transaction was executed on. This field will have one of the values in the ID column where the Ecosystem column's value is Cosmos.\t\"juno\"\ttxHash\tYes\tstring\tThe transaction's hash.\t\"DBAD2F68E6CEF64B8EA29F47B2765CED53CB1552AE6422C98974C8D4DA8869F8\"\tisSuccessful\tYes\tboolean\tWhether the transaction succeeded or failed.\ttrue\tmemo\tYes\tstring\tA note the user added while making the transaction. Maybe be empty (\"\").\t\"I owed you 1.5 ATOM since you paid for lunch.\"\tgranter\tYes\tstring\tThe account granting permission to another account to execute transactions on its behalf.\t\"bitsong129y6g55wz7mz9vs2nudfvfdaun80fuphjmhq35\"\tgrantee\tYes\tstring\tThe account granted permission from another account to execute transactions on their behalf.\t\"cheqd1ftaxf307mumu6gwg05q360xeryspcgsqgvq66z\"\texpiration\tNo\tstring\tWhen the grant will expire. If unspecified, then the grant doesn't expire but there may be other conditions which invalidate it.\t\"2100-08-08T13:41:03Z\"","example#Example":"{\n\"__type\": \"cosmos.authz.grant\",\n\"blockchain\": \"juno\",\n\"txHash\": \"DBAD2F68E6CEF64B8EA29F47B2765CED53CB1552AE6422C98974C8D4DA8869F8\",\n\"isSuccessful\": true,\n\"memo\": \"\",\n\"granter\": \"bitsong129y6g55wz7mz9vs2nudfvfdaun80fuphjmhq35\",\n\"grantee\": \"bitsong1jv4r79zsfkg3m3mdafg4uxyxg4z9fn3u8kjmh2\",\n\"expiration\": \"2100-08-08T13:41:03Z\"\n}"}},"/msgs/authz/revoke":{"title":"cosmos.authz.revoke","data":{"":"An authorization grant which was removed.","schema#Schema":"Field\tRequired\tData type\tExplanation\tExample\t__type\tYes\tstring\tAlways \"cosmos.authz.revoke\".\t\"cosmos.authz.revoke\"\tblockchain\tYes\tstring\tThe blockchain this transaction was executed on. This field will have one of the values in the ID column where the Ecosystem column's value is Cosmos.\t\"juno\"\ttxHash\tYes\tstring\tThe transaction's hash.\t\"DBAD2F68E6CEF64B8EA29F47B2765CED53CB1552AE6422C98974C8D4DA8869F8\"\tisSuccessful\tYes\tboolean\tWhether the transaction succeeded or failed.\ttrue\tmemo\tYes\tstring\tA note the user added while making the transaction. Maybe be empty (\"\").\t\"I owed you 1.5 ATOM since you paid for lunch.\"\tgranter\tYes\tstring\tThe account revoking permission from another account to execute transactions on its behalf.\t\"bitsong129y6g55wz7mz9vs2nudfvfdaun80fuphjmhq35\"\tgrantee\tYes\tstring\tThe account whose permission was revoked from another account to execute transactions on their behalf.\t\"cheqd1ftaxf307mumu6gwg05q360xeryspcgsqgvq66z\"\tpermission\tYes\tstring\tCosmos message type\t\"/cosmos.bank.v1beta1.MsgSend\"","example#Example":"{\n\"__type\": \"cosmos.authz.revoke\",\n\"blockchain\": \"juno\",\n\"txHash\": \"DBAD2F68E6CEF64B8EA29F47B2765CED53CB1552AE6422C98974C8D4DA8869F8\",\n\"isSuccessful\": true,\n\"memo\": \"\",\n\"granter\": \"bitsong129y6g55wz7mz9vs2nudfvfdaun80fuphjmhq35\",\n\"grantee\": \"bitsong1jv4r79zsfkg3m3mdafg4uxyxg4z9fn3u8kjmh2\",\n\"permission\": \"/cosmos.bank.v1beta1.MsgSend\"\n}"}},"/msgs/bank/multi-send":{"title":"cosmos.bank.multiSend","data":{"":"Tokens sent from one address to multiple addresses.","schema#Schema":"Field\tRequired\tData type\tExplanation\tExample\t__type\tYes\tstring\tAlways \"cosmos.bank.multiSend\".\t\"cosmos.bank.multiSend\"\tblockchain\tYes\tstring\tThe blockchain this transaction was executed on. This field will have one of the values in the ID column where the Ecosystem column's value is Cosmos.\t\"juno\"\ttxHash\tYes\tstring\tThe transaction's hash.\t\"DBAD2F68E6CEF64B8EA29F47B2765CED53CB1552AE6422C98974C8D4DA8869F8\"\tisSuccessful\tYes\tboolean\tWhether the transaction succeeded or failed.\ttrue\tmemo\tYes\tstring\tA note the user added while making the transaction. Maybe be empty (\"\").\t\"I owed you 1.5 ATOM since you paid for lunch.\"\tinputs\tYes\tarray of inputs\tThe \"fromAddress\" field's value is the same in each array element.\t\toutputs\tYes\tarray of outputs","input#input":"Field\tRequired\tData type\tExplanation\tExample\tfromAddress\tYes\tstring\tThe address sending tokens.\t\"cosmos1g0ffln2weg8wpzpn2hy9t2eddygqcxtvggmyhl\"\ttokens\tYes\tarray of tokens\tTokens sent from the fromAddress.","output#output":"Field\tRequired\tData type\tExplanation\tExample\ttoAddress\tYes\tstring\tOne of the addresses receiving tokens.\t\"cosmos1g0ffln2weg8wpzpn2hy9t2eddygqcxtvggmyhl\"\ttokens\tYes\tarray of tokens\tTokens sent to the toAddress.","token#token":"Field\tRequired\tData type\tExplanation\tExample\tdenomination\tYes\tstring\t\t\"uatom\"\tquantity\tYes\tstring\t\t\"100\"","example#Example":"{\n\"__type\": \"cosmos.bank.multiSend\",\n\"blockchain\": \"juno\",\n\"txHash\": \"DBAD2F68E6CEF64B8EA29F47B2765CED53CB1552AE6422C98974C8D4DA8869F8\",\n\"isSuccessful\": true,\n\"memo\": \"\",\n\"inputs\": [\n{\n\"fromAddress\": \"like1qurwvswpwjl80aa4aeecvj2q2l9gktnymqq8dq\",\n\"tokens\": [\n{\n\"denomination\": \"nanolike\",\n\"quantity\": \"11000000000\"\n}\n]\n}\n],\n\"outputs\": [\n{\n\"toAddress\": \"like156sc4gyx8qm7896q5yqh707fcy9tqwqtezsazl\",\n\"tokens\": [\n{\n\"denomination\": \"nanolike\",\n\"quantity\": \"10000000000\"\n}\n]\n},\n{\n\"toAddress\": \"like174h9qqxf249032yh5ndkffw8yet6tttrx9rd70\",\n\"tokens\": [\n{\n\"denomination\": \"nanolike\",\n\"quantity\": \"1000000000\"\n}\n]\n}\n]\n}"}},"/msgs/bank/send":{"title":"cosmos.bank.send","data":{"":"Tokens sent from the one account to another.","schema#Schema":"Field\tRequired\tData type\tExplanation\tExample\t__type\tYes\tstring\tAlways \"cosmos.bank.send\".\t\"cosmos.bank.send\"\tblockchain\tYes\tstring\tThe blockchain this transaction was executed on. This field will have one of the values in the ID column where the Ecosystem column's value is Cosmos.\t\"juno\"\ttxHash\tYes\tstring\tThe transaction's hash.\t\"DBAD2F68E6CEF64B8EA29F47B2765CED53CB1552AE6422C98974C8D4DA8869F8\"\tisSuccessful\tYes\tboolean\tWhether the transaction succeeded or failed.\ttrue\tmemo\tYes\tstring\tA note the user added while making the transaction. Maybe be empty (\"\").\t\"I owed you 1.5 ATOM since you paid for lunch.\"\tfromAddress\tYes\tstring\tSender's address.\t\"cosmos1g0ffln2weg8wpzpn2hy9t2eddygqcxtvggmyhl\"\ttoAddress\tYes\tstring\tReceiver's address.\t\"cosmos1g0ffln2weg8wpzpn2hy9t2eddygqcxtvggmyhl\"\ttokens\tYes\tarray of tokens\tTokens sent from the fromAddress to the toAddress.","token#token":"Field\tRequired\tData type\tExplanation\tExample\tdenomination\tYes\tstring\t\t\"uatom\"\tquantity\tYes\tstring\t\t\"100\"","example#Example":"{\n\"__type\": \"cosmos.bank.send\",\n\"blockchain\": \"juno\",\n\"txHash\": \"DBAD2F68E6CEF64B8EA29F47B2765CED53CB1552AE6422C98974C8D4DA8869F8\",\n\"isSuccessful\": true,\n\"memo\": \"\",\n\"fromAddress\": \"like1qurwvswpwjl80aa4aeecvj2q2l9gktnymqq8dq\",\n\"toAddress\": \"like156sc4gyx8qm7896q5yqh707fcy9tqwqtezsazl\",\n\"tokens\": [\n{\n\"denomination\": \"nanolike\",\n\"quantity\": \"11000000000\"\n}\n]\n}"}},"/msgs/fee-grant/grant-allowance":{"title":"cosmos.feeGrant.grantAllowance","data":{"":"A created fee allowance grant.","schema#Schema":"Field\tRequired\tData type\tExplanation\tExample\t__type\tYes\tstring\tAlways \"cosmos.feeGrant.grantAllowance\".\t\"cosmos.feeGrant.grantAllowance\"\tblockchain\tYes\tstring\tThe blockchain this transaction was executed on. This field will have one of the values in the ID column where the Ecosystem column's value is Cosmos.\t\"juno\"\ttxHash\tYes\tstring\tThe transaction's hash.\t\"DBAD2F68E6CEF64B8EA29F47B2765CED53CB1552AE6422C98974C8D4DA8869F8\"\tisSuccessful\tYes\tboolean\tWhether the transaction succeeded or failed.\ttrue\tmemo\tYes\tstring\tA note the user added while making the transaction. Maybe be empty (\"\").\t\"I owed you 1.5 ATOM since you paid for lunch.\"\tgranter\tYes\tstring\tGranter's address.\t\"cosmos1g0ffln2weg8wpzpn2hy9t2eddygqcxtvggmyhl\"\tgrantee\tYes\tstring\tGrantee's address.\t\"cosmos1g0ffln2weg8wpzpn2hy9t2eddygqcxtvggmyhl\"","example#Example":"{\n\"__type\": \"cosmos.feeGrant.grantAllowance\",\n\"blockchain\": \"juno\",\n\"txHash\": \"DBAD2F68E6CEF64B8EA29F47B2765CED53CB1552AE6422C98974C8D4DA8869F8\",\n\"isSuccessful\": true,\n\"memo\": \"\",\n\"granter\": \"like1qurwvswpwjl80aa4aeecvj2q2l9gktnymqq8dq\",\n\"grantee\": \"like156sc4gyx8qm7896q5yqh707fcy9tqwqtezsazl\"\n}"}},"/msgs/fee-grant/revoke-allowance":{"title":"cosmos.feeGrant.revokeAllowance","data":{"":"A removed fee allowance grant.","schema#Schema":"Field\tRequired\tData type\tExplanation\tExample\t__type\tYes\tstring\tAlways \"cosmos.feeGrant.revokeAllowance\".\t\"cosmos.feeGrant.revokeAllowance\"\tblockchain\tYes\tstring\tThe blockchain this transaction was executed on. This field will have one of the values in the ID column where the Ecosystem column's value is Cosmos.\t\"juno\"\ttxHash\tYes\tstring\tThe transaction's hash.\t\"DBAD2F68E6CEF64B8EA29F47B2765CED53CB1552AE6422C98974C8D4DA8869F8\"\tisSuccessful\tYes\tboolean\tWhether the transaction succeeded or failed.\ttrue\tmemo\tYes\tstring\tA note the user added while making the transaction. Maybe be empty (\"\").\t\"I owed you 1.5 ATOM since you paid for lunch.\"\tgranter\tYes\tstring\tGranter's address.\t\"cosmos1g0ffln2weg8wpzpn2hy9t2eddygqcxtvggmyhl\"\tgrantee\tYes\tstring\tGrantee's address.\t\"cosmos1g0ffln2weg8wpzpn2hy9t2eddygqcxtvggmyhl\"","example#Example":"{\n\"__type\": \"cosmos.feeGrant.revokeAllowance\",\n\"blockchain\": \"juno\",\n\"txHash\": \"DBAD2F68E6CEF64B8EA29F47B2765CED53CB1552AE6422C98974C8D4DA8869F8\",\n\"isSuccessful\": true,\n\"memo\": \"\",\n\"granter\": \"like1qurwvswpwjl80aa4aeecvj2q2l9gktnymqq8dq\",\n\"grantee\": \"like156sc4gyx8qm7896q5yqh707fcy9tqwqtezsazl\"\n}"}},"/msgs/gamm/create":{"title":"cosmos.gamm.create","data":{"":"A user created an LP.","schema#Schema":"Field\tRequired\tData type\tExplanation\tExample\t__type\tYes\tstring\tAlways \"cosmos.gamm.create\".\t\"cosmos.gamm.create\"\tblockchain\tYes\tstring\tThe blockchain this transaction was executed on. This field will have one of the values in the ID column where the Ecosystem column's value is Cosmos.\t\"juno\"\ttxHash\tYes\tstring\tThe transaction's hash.\t\"DBAD2F68E6CEF64B8EA29F47B2765CED53CB1552AE6422C98974C8D4DA8869F8\"\tisSuccessful\tYes\tboolean\tWhether the transaction succeeded or failed.\ttrue\tmemo\tYes\tstring\tA note the user added while making the transaction. Maybe be empty (\"\").\t\"I owed you 1.5 ATOM since you paid for lunch.\"\taccount\tYes\tstring\tCreator's address\t\"bitsong1jv4r79zsfkg3m3mdafg4uxyxg4z9fn3u8kjmh2\"\ttokens\tYes\tarray of tokens\tInitial liquidity","token#token":"Field\tRequired\tData type\tExplanation\tExample\tdenomination\tYes\tstring\t\t\"uatom\"\tquantity\tYes\tstring\t\t\"100\"","example#Example":"{\n\"__type\": \"cosmos.gamm.create\",\n\"blockchain\": \"juno\",\n\"txHash\": \"DBAD2F68E6CEF64B8EA29F47B2765CED53CB1552AE6422C98974C8D4DA8869F8\",\n\"isSuccessful\": true,\n\"memo\": \"\",\n\"account\": \"bitsong1jv4r79zsfkg3m3mdafg4uxyxg4z9fn3u8kjmh2\",\n\"tokens\": [\n{\n\"denomination\": \"uatom\",\n\"quantity\": \"100\"\n},\n{\n\"denomination\": \"uosmo\",\n\"quantity\": \"200\"\n}\n]\n}"}},"/msgs/gamm/exit-exact-and-swap":{"title":"cosmos.gamm.exitExactAndSwap","data":{"":"A user executed a transaction that performed the following steps:\nThe user's LP shares were exchanged for two types of tokens from the LP. The exact number of shares specified are used (the system won't take more or less than the specified quantity).\nOne of the two token types got swapped for the other. The user received at least the quantity specified.","schema#Schema":"Field\tRequired\tData type\tExplanation\tExample\t__type\tYes\tstring\tAlways \"cosmos.gamm.exitExactAndSwap\".\t\"cosmos.gamm.exitExactAndSwap\"\tblockchain\tYes\tstring\tThe blockchain this transaction was executed on. This field will have one of the values in the ID column where the Ecosystem column's value is Cosmos.\t\"juno\"\ttxHash\tYes\tstring\tThe transaction's hash.\t\"DBAD2F68E6CEF64B8EA29F47B2765CED53CB1552AE6422C98974C8D4DA8869F8\"\tisSuccessful\tYes\tboolean\tWhether the transaction succeeded or failed.\ttrue\tmemo\tYes\tstring\tA note the user added while making the transaction. Maybe be empty (\"\").\t\"I owed you 1.5 ATOM since you paid for lunch.\"\taccount\tYes\tstring\tExecutor's address\t\"bitsong1jv4r79zsfkg3m3mdafg4uxyxg4z9fn3u8kjmh2\"\tpoolId\tYes\tnumber\tLP's ID\t12\ttoken\tYes\ttoken\tThe token the user received.\t\tshares\tYes\tstring\tThe number of shares the user exchanged for tokens.\t\"1231\"","token#token":"Field\tRequired\tData type\tExplanation\tExample\tdenomination\tYes\tstring\t\t\"uatom\"\tquantity\tYes\tstring\t\t\"100\"","example#Example":"{\n\"__type\": \"cosmos.gamm.exitExactAndSwap\",\n\"blockchain\": \"juno\",\n\"txHash\": \"DBAD2F68E6CEF64B8EA29F47B2765CED53CB1552AE6422C98974C8D4DA8869F8\",\n\"isSuccessful\": true,\n\"memo\": \"\",\n\"account\": \"bitsong1jv4r79zsfkg3m3mdafg4uxyxg4z9fn3u8kjmh2\",\n\"poolId\": 1,\n\"token\": {\n\"denomination\": \"uatom\",\n\"quantity\": \"100\"\n},\n\"shares\": \"1238\"\n}"}},"/msgs/gamm/exit-max-and-swap":{"title":"cosmos.gamm.exitMaxAndSwap","data":{"":"The account executed a transaction that performed the following steps:\nThe LP shares were exchanged for two tokens from the LP. At most the number of shares specified are used (the system might take less than the specified quantity).\nOne of the two token types gets swapped for the other. The user received the exact quantity of tokens specified.","schema#Schema":"Field\tRequired\tData type\tExplanation\tExample\t__type\tYes\tstring\tAlways \"cosmos.gamm.exitMaxAndSwap\".\t\"cosmos.gamm.exitMaxAndSwap\"\tblockchain\tYes\tstring\tThe blockchain this transaction was executed on. This field will have one of the values in the ID column where the Ecosystem column's value is Cosmos.\t\"juno\"\ttxHash\tYes\tstring\tThe transaction's hash.\t\"DBAD2F68E6CEF64B8EA29F47B2765CED53CB1552AE6422C98974C8D4DA8869F8\"\tisSuccessful\tYes\tboolean\tWhether the transaction succeeded or failed.\ttrue\tmemo\tYes\tstring\tA note the user added while making the transaction. Maybe be empty (\"\").\t\"I owed you 1.5 ATOM since you paid for lunch.\"\taccount\tYes\tstring\tExecutor's address\t\"bitsong1jv4r79zsfkg3m3mdafg4uxyxg4z9fn3u8kjmh2\"\tpoolId\tYes\tnumber\tLP's ID\t12\ttoken\tYes\ttoken\tThe token the user received.\t\tshares\tYes\tstring\tThe maximum number of shares the system took from the user.\t\"1231\"","token#token":"Field\tRequired\tData type\tExplanation\tExample\tdenomination\tYes\tstring\t\t\"uatom\"\tquantity\tYes\tstring\tThe exact number of tokens the user received.\t\"100\"","example#Example":"{\n\"__type\": \"cosmos.gamm.exitMaxAndSwap\",\n\"blockchain\": \"juno\",\n\"txHash\": \"DBAD2F68E6CEF64B8EA29F47B2765CED53CB1552AE6422C98974C8D4DA8869F8\",\n\"isSuccessful\": true,\n\"memo\": \"\",\n\"account\": \"bitsong1jv4r79zsfkg3m3mdafg4uxyxg4z9fn3u8kjmh2\",\n\"poolId\": 1,\n\"token\": {\n\"denomination\": \"uatom\",\n\"quantity\": \"100\"\n},\n\"shares\": \"1238\"\n}"}},"/msgs/gamm/exit":{"title":"cosmos.gamm.exit","data":{"":"The user exchanged LP shares for tokens.","schema#Schema":"Field\tRequired\tData type\tExplanation\tExample\t__type\tYes\tstring\tAlways \"cosmos.gamm.exit\".\t\"cosmos.gamm.exit\"\tblockchain\tYes\tstring\tThe blockchain this transaction was executed on. This field will have one of the values in the ID column where the Ecosystem column's value is Cosmos.\t\"juno\"\ttxHash\tYes\tstring\tThe transaction's hash.\t\"DBAD2F68E6CEF64B8EA29F47B2765CED53CB1552AE6422C98974C8D4DA8869F8\"\tisSuccessful\tYes\tboolean\tWhether the transaction succeeded or failed.\ttrue\tmemo\tYes\tstring\tA note the user added while making the transaction. Maybe be empty (\"\").\t\"I owed you 1.5 ATOM since you paid for lunch.\"\taccount\tYes\tstring\tExecutor's address\t\"bitsong1jv4r79zsfkg3m3mdafg4uxyxg4z9fn3u8kjmh2\"\tpoolId\tYes\tnumber\tLP's ID\t12\ttokens\tYes\tarray of tokens\tThe tokens the user received.\t\tshares\tYes\tstring\tThe number of shares the user exchanged for tokens.\t\"1231\"","token#token":"Field\tRequired\tData type\tExplanation\tExample\tdenomination\tYes\tstring\t\t\"uatom\"\tquantity\tYes\tstring\t\t\"100\"","example#Example":"{\n\"__type\": \"cosmos.gamm.exit\",\n\"blockchain\": \"juno\",\n\"txHash\": \"DBAD2F68E6CEF64B8EA29F47B2765CED53CB1552AE6422C98974C8D4DA8869F8\",\n\"isSuccessful\": true,\n\"memo\": \"\",\n\"account\": \"bitsong1jv4r79zsfkg3m3mdafg4uxyxg4z9fn3u8kjmh2\",\n\"poolId\": 1,\n\"tokens\": [\n{\n\"denomination\": \"uatom\",\n\"quantity\": \"100\"\n},\n{\n\"denomination\": \"uosmo\",\n\"quantity\": \"200\"\n}\n],\n\"shares\": \"1238\"\n}"}},"/msgs/gamm/join":{"title":"cosmos.gamm.join","data":{"":"A user deposited tokens in an LP in exchange for LP shares.","schema#Schema":"Field\tRequired\tData type\tExplanation\tExample\t__type\tYes\tstring\tAlways \"cosmos.gamm.join\".\t\"cosmos.gamm.join\"\tblockchain\tYes\tstring\tThe blockchain this transaction was executed on. This field will have one of the values in the ID column where the Ecosystem column's value is Cosmos.\t\"juno\"\ttxHash\tYes\tstring\tThe transaction's hash.\t\"DBAD2F68E6CEF64B8EA29F47B2765CED53CB1552AE6422C98974C8D4DA8869F8\"\tisSuccessful\tYes\tboolean\tWhether the transaction succeeded or failed.\ttrue\tmemo\tYes\tstring\tA note the user added while making the transaction. Maybe be empty (\"\").\t\"I owed you 1.5 ATOM since you paid for lunch.\"\taccount\tYes\tstring\tExecutor's address\t\"bitsong1jv4r79zsfkg3m3mdafg4uxyxg4z9fn3u8kjmh2\"\tpoolId\tYes\tnumber\tLP's ID\t12\ttokens\tYes\tarray of tokens\tThe tokens the user deposited.\t\tshares\tYes\tstring\tThe number of shares the user got in exchange for tokens.\t\"1231\"","token#token":"Field\tRequired\tData type\tExplanation\tExample\tdenomination\tYes\tstring\t\t\"uatom\"\tquantity\tYes\tstring\t\t\"100\"","example#Example":"{\n\"__type\": \"cosmos.gamm.join\",\n\"blockchain\": \"juno\",\n\"txHash\": \"DBAD2F68E6CEF64B8EA29F47B2765CED53CB1552AE6422C98974C8D4DA8869F8\",\n\"isSuccessful\": true,\n\"memo\": \"\",\n\"account\": \"bitsong1jv4r79zsfkg3m3mdafg4uxyxg4z9fn3u8kjmh2\",\n\"poolId\": 1,\n\"tokens\": [\n{\n\"denomination\": \"uatom\",\n\"quantity\": \"100\"\n},\n{\n\"denomination\": \"uosmo\",\n\"quantity\": \"200\"\n}\n],\n\"shares\": \"1238\"\n}"}},"/msgs/gamm/swap-exact-and-join":{"title":"cosmos.gamm.swapExactAndJoin","data":{"":"An account executed a transaction that performed the following steps:\nThe LP required the account to deposit two types of tokens to join. but they only used one. The account did this by having half of one token type swapped for the other required token type. The exact quantity of tokens the user submitted were used (the system didn't take more or less than the specified quantity).\nThe pair of tokens were converted to LP shares which were given to the account. The account received at least the number of LP shares specified.","schema#Schema":"Field\tRequired\tData type\tExplanation\tExample\t__type\tYes\tstring\tAlways \"cosmos.gamm.swapExactAndJoin\".\t\"cosmos.gamm.swapExactAndJoin\"\tblockchain\tYes\tstring\tThe blockchain this transaction was executed on. This field will have one of the values in the ID column where the Ecosystem column's value is Cosmos.\t\"juno\"\ttxHash\tYes\tstring\tThe transaction's hash.\t\"DBAD2F68E6CEF64B8EA29F47B2765CED53CB1552AE6422C98974C8D4DA8869F8\"\tisSuccessful\tYes\tboolean\tWhether the transaction succeeded or failed.\ttrue\tmemo\tYes\tstring\tA note the user added while making the transaction. Maybe be empty (\"\").\t\"I owed you 1.5 ATOM since you paid for lunch.\"\taccount\tYes\tstring\tExecutor's address\t\"bitsong1jv4r79zsfkg3m3mdafg4uxyxg4z9fn3u8kjmh2\"\tpoolId\tYes\tnumber\tLP's ID\t12\ttoken\tYes\ttoken\tThe token the user deposited.\t\tshares\tYes\tstring\tThe minimum number of shares the user got in exchange for tokens.\t\"1231\"","token#token":"Field\tRequired\tData type\tExplanation\tExample\tdenomination\tYes\tstring\t\t\"uatom\"\tquantity\tYes\tstring\tThe system took exactly this many tokens from the user for the swap.\t\"100\"","example#Example":"{\n\"__type\": \"cosmos.gamm.swapExactAndJoin\",\n\"blockchain\": \"juno\",\n\"txHash\": \"DBAD2F68E6CEF64B8EA29F47B2765CED53CB1552AE6422C98974C8D4DA8869F8\",\n\"isSuccessful\": true,\n\"memo\": \"\",\n\"account\": \"bitsong1jv4r79zsfkg3m3mdafg4uxyxg4z9fn3u8kjmh2\",\n\"poolId\": 1,\n\"token\": {\n\"denomination\": \"uatom\",\n\"quantity\": \"100\"\n},\n\"shares\": \"1238\"\n}"}},"/msgs/gamm/swap-exact":{"title":"cosmos.gamm.swapExact","data":{"":"The account swapped an exact token amount for a minimum amount of another token.","schema#Schema":"Field\tRequired\tData type\tExplanation\tExample\t__type\tYes\tstring\tAlways \"cosmos.gamm.swapExact\".\t\"cosmos.gamm.swapExact\"\tblockchain\tYes\tstring\tThe blockchain this transaction was executed on. This field will have one of the values in the ID column where the Ecosystem column's value is Cosmos.\t\"juno\"\ttxHash\tYes\tstring\tThe transaction's hash.\t\"DBAD2F68E6CEF64B8EA29F47B2765CED53CB1552AE6422C98974C8D4DA8869F8\"\tisSuccessful\tYes\tboolean\tWhether the transaction succeeded or failed.\ttrue\tmemo\tYes\tstring\tA note the user added while making the transaction. Maybe be empty (\"\").\t\"I owed you 1.5 ATOM since you paid for lunch.\"\taccount\tYes\tstring\tExecutor's address\t\"bitsong1jv4r79zsfkg3m3mdafg4uxyxg4z9fn3u8kjmh2\"\troutes\tYes\tarray of routes\t\t\tinputToken\tYes\ttoken\tThe token the user deposited.\t\toutputQuantity\tYes\tstring\tThe minimum quantity of tokens the user received.\t\"1231\"","route#route":"Field\tRequired\tData type\tExplanation\tExample\tpoolId\tYes\tnumber\tThe LP used to swap.\t1\tdenomination\tYes\tstring\tThe type of token received.\t\"uosmo\"","token#token":"Field\tRequired\tData type\tExplanation\tExample\tdenomination\tYes\tstring\t\t\"uatom\"\tquantity\tYes\tstring\tThe exact quantity of tokens the user deposited.\t\"100\"","example#Example":"{\n\"__type\": \"cosmos.gamm.swapExact\",\n\"blockchain\": \"juno\",\n\"txHash\": \"DBAD2F68E6CEF64B8EA29F47B2765CED53CB1552AE6422C98974C8D4DA8869F8\",\n\"isSuccessful\": true,\n\"memo\": \"\",\n\"account\": \"bitsong1jv4r79zsfkg3m3mdafg4uxyxg4z9fn3u8kjmh2\",\n\"routes\": [\n{\n\"poolId\": 1,\n\"denomination\": \"uosmo\"\n}\n],\n\"inputToken\": {\n\"denomination\": \"uatom\",\n\"quantity\": \"100\"\n},\n\"outputQuantity\": \"200\"\n}"}},"/msgs/gamm/swap-max-and-join":{"title":"cosmos.gamm.swapMaxAndJoin","data":{"":"An account executed a transaction that performed the following steps:\nThe LP required the account to deposit two types of tokens to join. but they only used one. The account did this by having half of one token type swapped for the other required token type. At most the quantity of tokens the user submitted were used (the system might have taken less than the specified quantity).\nThe pair of tokens were converted to LP shares which were given to the account. The account received the exact number of LP shares specified.","schema#Schema":"Field\tRequired\tData type\tExplanation\tExample\t__type\tYes\tstring\tAlways \"cosmos.gamm.swapMaxAndJoin\".\t\"cosmos.gamm.swapMaxAndJoin\"\tblockchain\tYes\tstring\tThe blockchain this transaction was executed on. This field will have one of the values in the ID column where the Ecosystem column's value is Cosmos.\t\"juno\"\ttxHash\tYes\tstring\tThe transaction's hash.\t\"DBAD2F68E6CEF64B8EA29F47B2765CED53CB1552AE6422C98974C8D4DA8869F8\"\tisSuccessful\tYes\tboolean\tWhether the transaction succeeded or failed.\ttrue\tmemo\tYes\tstring\tA note the user added while making the transaction. Maybe be empty (\"\").\t\"I owed you 1.5 ATOM since you paid for lunch.\"\taccount\tYes\tstring\tExecutor's address\t\"bitsong1jv4r79zsfkg3m3mdafg4uxyxg4z9fn3u8kjmh2\"\tpoolId\tYes\tnumber\tLP's ID\t12\ttoken\tYes\ttoken\tThe token the user deposited.\t\tshares\tYes\tstring\tThe exact number of shares the user got in exchange for tokens.\t\"1231\"","token#token":"Field\tRequired\tData type\tExplanation\tExample\tdenomination\tYes\tstring\t\t\"uatom\"\tquantity\tYes\tstring\tThe system took at most this quantity of tokens from the user for the swap.\t\"100\"","example#Example":"{\n\"__type\": \"cosmos.gamm.swapMaxAndJoin\",\n\"blockchain\": \"juno\",\n\"txHash\": \"DBAD2F68E6CEF64B8EA29F47B2765CED53CB1552AE6422C98974C8D4DA8869F8\",\n\"isSuccessful\": true,\n\"memo\": \"\",\n\"account\": \"bitsong1jv4r79zsfkg3m3mdafg4uxyxg4z9fn3u8kjmh2\",\n\"poolId\": 1,\n\"token\": {\n\"denomination\": \"uatom\",\n\"quantity\": \"100\"\n},\n\"shares\": \"1238\"\n}"}},"/msgs/gamm/swap-max":{"title":"cosmos.gamm.swapMax","data":{"":"The account swapped at most the specified number of input tokens for exactly the specified number of output tokens.","schema#Schema":"Field\tRequired\tData type\tExplanation\tExample\t__type\tYes\tstring\tAlways \"cosmos.gamm.swapMax\".\t\"cosmos.gamm.swapMax\"\tblockchain\tYes\tstring\tThe blockchain this transaction was executed on. This field will have one of the values in the ID column where the Ecosystem column's value is Cosmos.\t\"juno\"\ttxHash\tYes\tstring\tThe transaction's hash.\t\"DBAD2F68E6CEF64B8EA29F47B2765CED53CB1552AE6422C98974C8D4DA8869F8\"\tisSuccessful\tYes\tboolean\tWhether the transaction succeeded or failed.\ttrue\tmemo\tYes\tstring\tA note the user added while making the transaction. Maybe be empty (\"\").\t\"I owed you 1.5 ATOM since you paid for lunch.\"\taccount\tYes\tstring\tExecutor's address\t\"bitsong1jv4r79zsfkg3m3mdafg4uxyxg4z9fn3u8kjmh2\"\troutes\tYes\tarray of routes\t\t\toutputToken\tYes\ttoken\tThe token the user received.\t\tinputQuantity\tYes\tstring\tThe maximum quantity of tokens the system took from the user for the swap.\t\"1231\"","route#route":"Field\tRequired\tData type\tExplanation\tExample\tpoolId\tYes\tnumber\tThe LP used to swap.\t1\tdenomination\tYes\tstring\tThe type of token deposited.\t\"uosmo\"","token#token":"Field\tRequired\tData type\tExplanation\tExample\tdenomination\tYes\tstring\t\t\"uatom\"\tquantity\tYes\tstring\tThe exact quantity of tokens the user received.\t\"100\"","example#Example":"{\n\"__type\": \"cosmos.gamm.swapMax\",\n\"blockchain\": \"juno\",\n\"txHash\": \"DBAD2F68E6CEF64B8EA29F47B2765CED53CB1552AE6422C98974C8D4DA8869F8\",\n\"isSuccessful\": true,\n\"memo\": \"\",\n\"account\": \"bitsong1jv4r79zsfkg3m3mdafg4uxyxg4z9fn3u8kjmh2\",\n\"routes\": [\n{\n\"poolId\": 1,\n\"denomination\": \"uosmo\"\n}\n],\n\"outputToken\": {\n\"denomination\": \"uatom\",\n\"quantity\": \"100\"\n},\n\"inputQuantity\": \"200\"\n}"}},"/msgs/gov/deposit":{"title":"cosmos.gov.deposit","data":{"":"A non-initial governance proposal deposit.","schema#Schema":"Field\tRequired\tData type\tExplanation\tExample\t__type\tYes\tstring\tAlways \"cosmos.gov.deposit\".\t\"cosmos.gov.deposit\"\tblockchain\tYes\tstring\tThe blockchain this transaction was executed on. This field will have one of the values in the ID column where the Ecosystem column's value is Cosmos.\t\"juno\"\ttxHash\tYes\tstring\tThe transaction's hash.\t\"DBAD2F68E6CEF64B8EA29F47B2765CED53CB1552AE6422C98974C8D4DA8869F8\"\tisSuccessful\tYes\tboolean\tWhether the transaction succeeded or failed.\ttrue\tmemo\tYes\tstring\tA note the user added while making the transaction. Maybe be empty (\"\").\t\"I owed you 1.5 ATOM since you paid for lunch.\"\tproposalId\tYes\tstring\tProposal ID\t\"1\"\tdepositor\tYes\tstring\tDepositor's address\t\"bitsong1jv4r79zsfkg3m3mdafg4uxyxg4z9fn3u8kjmh2\"\ttokens\tYes\tarray of tokens\tDeposit\t\tisStartOfVotingPeriod\tYes\tboolean\ttrue if this transaction caused the governance proposal to enter the voting period. false if either the proposal was already in the voting period or still isn't.\tfalse","token#token":"Field\tRequired\tData type\tExplanation\tExample\tdenomination\tYes\tstring\t\t\"uatom\"\tquantity\tYes\tstring\t\t\"100\"","example#Example":"{\n\"__type\": \"cosmos.gov.deposit\",\n\"blockchain\": \"juno\",\n\"txHash\": \"DBAD2F68E6CEF64B8EA29F47B2765CED53CB1552AE6422C98974C8D4DA8869F8\",\n\"isSuccessful\": true,\n\"memo\": \"\",\n\"proposalId\": \"1\",\n\"depositor\": \"bitsong1jv4r79zsfkg3m3mdafg4uxyxg4z9fn3u8kjmh2\",\n\"tokens\": [\n{\n\"denomination\": \"uatom\",\n\"quantity\": \"100\"\n}\n],\n\"isStartOfVotingPeriod\": false\n}"}},"/msgs/gov/submit-proposal":{"title":"cosmos.gov.submitProposal","data":{"":"A created governance proposal.","schema#Schema":"Field\tRequired\tData type\tExplanation\tExample\t__type\tYes\tstring\tAlways \"cosmos.gov.submitProposal\".\t\"cosmos.gov.submitProposal\"\tblockchain\tYes\tstring\tThe blockchain this transaction was executed on. This field will have one of the values in the ID column where the Ecosystem column's value is Cosmos.\t\"juno\"\ttxHash\tYes\tstring\tThe transaction's hash.\t\"DBAD2F68E6CEF64B8EA29F47B2765CED53CB1552AE6422C98974C8D4DA8869F8\"\tisSuccessful\tYes\tboolean\tWhether the transaction succeeded or failed.\ttrue\tmemo\tYes\tstring\tA note the user added while making the transaction. Maybe be empty (\"\").\t\"I owed you 1.5 ATOM since you paid for lunch.\"\tproposer\tYes\tstring\tProposer's address\t\"bitsong1jv4r79zsfkg3m3mdafg4uxyxg4z9fn3u8kjmh2\"\ttokens\tYes\tarray of tokens\tDeposit\t\tisStartOfVotingPeriod\tYes\tboolean\ttrue if this transaction caused the governance proposal to enter the voting period. false if either the proposal was already in the voting period or still isn't.\tfalse\tdetails\tNo\tdetails\tThe proposal's details.\t\tproposalId\tYes\tstring\tProposal ID.\t\"1\"","token#token":"Field\tRequired\tData type\tExplanation\tExample\tdenomination\tYes\tstring\t\t\"uatom\"\tquantity\tYes\tstring\t\t\"100\"","details#details":"Field\tRequired\tData type\tExplanation\tExample\ttype\tYes\tstring\tEither \"text\" or \"softwareUpgrade\". \"text\" proposals are for things like getting the blockchain's foundating to start an incubator. \"softwareUpgrade\" proposals are for things like releasing a new version of the blockchain's software.\t\"text\"\ttitle\tYes\tstring\tProposal's title.\t\"ATOM 2.0\"\tdescription\tYes\tstring\tProposal's description.\t\"This research paper proposes a new vision for Cosmos Hub.\"","example#Example":"{\n\"__type\": \"cosmos.gov.submitProposal\",\n\"blockchain\": \"juno\",\n\"txHash\": \"DBAD2F68E6CEF64B8EA29F47B2765CED53CB1552AE6422C98974C8D4DA8869F8\",\n\"isSuccessful\": true,\n\"memo\": \"\",\n\"proposer\": \"bitsong1jv4r79zsfkg3m3mdafg4uxyxg4z9fn3u8kjmh2\",\n\"tokens\": [\n{\n\"denomination\": \"uatom\",\n\"quantity\": \"100\"\n}\n],\n\"isStartOfVotingPeriod\": false,\n\"details\": {\n\"type\": \"text\",\n\"title\": \"ATOM 2.0\",\n\"description\": \"This research paper proposes a new vision for Cosmos Hub.\"\n},\n\"proposalId\": \"1\"\n}"}},"/msgs/gov/vote":{"title":"cosmos.gov.vote","data":{"":"A vote on a governance proposal.","schema#Schema":"Field\tRequired\tData type\tExplanation\tExample\t__type\tYes\tstring\tAlways \"cosmos.gov.vote\".\t\"cosmos.gov.vote\"\tblockchain\tYes\tstring\tThe blockchain this transaction was executed on. This field will have one of the values in the ID column where the Ecosystem column's value is Cosmos.\t\"juno\"\ttxHash\tYes\tstring\tThe transaction's hash.\t\"DBAD2F68E6CEF64B8EA29F47B2765CED53CB1552AE6422C98974C8D4DA8869F8\"\tisSuccessful\tYes\tboolean\tWhether the transaction succeeded or failed.\ttrue\tmemo\tYes\tstring\tA note the user added while making the transaction. Maybe be empty (\"\").\t\"I owed you 1.5 ATOM since you paid for lunch.\"\tproposalId\tYes\tstring\tProposal ID\t\"1\"\tvoter\tYes\tstring\tVoter's address\t\"bitsong1jv4r79zsfkg3m3mdafg4uxyxg4z9fn3u8kjmh2\"\toption\tYes\tstring\tOne of \"NO_OP\", \"YES\", \"ABSTAIN\", \"NO\", and \"VETO\".\t\"NO_OP\"","example#Example":"{\n\"__type\": \"cosmos.gov.vote\",\n\"blockchain\": \"juno\",\n\"txHash\": \"DBAD2F68E6CEF64B8EA29F47B2765CED53CB1552AE6422C98974C8D4DA8869F8\",\n\"isSuccessful\": true,\n\"memo\": \"\",\n\"proposalId\": \"1\",\n\"voter\": \"bitsong1jv4r79zsfkg3m3mdafg4uxyxg4z9fn3u8kjmh2\",\n\"option\": \"YES\"\n}"}},"/msgs/ibc/receive":{"title":"cosmos.ibc.receive","data":{"":"A token sent from another blockchain.","schema#Schema":"Field\tRequired\tData type\tExplanation\tExample\t__type\tYes\tstring\tAlways \"cosmos.ibc.receive\".\t\"cosmos.ibc.receive\"\tblockchain\tYes\tstring\tThe blockchain the token was received on. This field will have one of the values in the ID column where the Ecosystem column's value is Cosmos.\t\"juno\"\ttxHash\tYes\tstring\tThe transaction's hash.\t\"DBAD2F68E6CEF64B8EA29F47B2765CED53CB1552AE6422C98974C8D4DA8869F8\"\tisSuccessful\tYes\tboolean\tWhether the transaction succeeded or failed.\ttrue\tmemo\tYes\tstring\tA note the user added while making the transaction. Maybe be empty (\"\").\t\"I owed you 1.5 ATOM since you paid for lunch.\"\tfromAddress\tYes\tstring\tSender's address.\t\"cosmos1g0ffln2weg8wpzpn2hy9t2eddygqcxtvggmyhl\"\ttoAddress\tYes\tstring\tReceiver's address.\t\"cosmos1g0ffln2weg8wpzpn2hy9t2eddygqcxtvggmyhl\"\tdenomination\tYes\tstring\tThe denomination of the token transferred.\t\"uatom\"\tquantity\tYes\tstring\tThe quantity of denomination transferred.\t\"100\"\tsequence\tYes\tstring\tIBC sequence.\t\"65333\"\tsrcPort\tYes\tstring\tIBC port used.\t\"transfer\"\tsrcChannel\tYes\tstring\tIBC channel used.\t\"channel-42\"\tdestinationPort\tYes\tIBC port used to receive.\t\t\"transfer\"\tdestinationChannel\tYes\tIBC channel used to receive.\t\t\"channel-355\"","example#Example":"{\n\"__type\": \"cosmos.ibc.receive\",\n\"blockchain\": \"juno\",\n\"txHash\": \"DBAD2F68E6CEF64B8EA29F47B2765CED53CB1552AE6422C98974C8D4DA8869F8\",\n\"isSuccessful\": true,\n\"memo\": \"\",\n\"fromAddress\": \"like1qurwvswpwjl80aa4aeecvj2q2l9gktnymqq8dq\",\n\"toAddress\": \"like156sc4gyx8qm7896q5yqh707fcy9tqwqtezsazl\",\n\"denomination\": \"uatom\",\n\"quantity\": \"100\",\n\"sequence\": \"65333\",\n\"srcPort\": \"transfer\",\n\"srcChannel\": \"channel-42\",\n\"destinationPort\": \"transfer\",\n\"destinationChannel\": \"channel-355\"\n}"}},"/msgs/ibc/send":{"title":"cosmos.ibc.send","data":{"":"A token sent from one blockchain to another.","schema#Schema":"Field\tRequired\tData type\tExplanation\tExample\t__type\tYes\tstring\tAlways \"cosmos.ibc.send\".\t\"cosmos.ibc.send\"\tblockchain\tYes\tstring\tThe blockchain the token was sent from. This field will have one of the values in the ID column where the Ecosystem column's value is Cosmos.\t\"juno\"\ttxHash\tYes\tstring\tThe transaction's hash.\t\"DBAD2F68E6CEF64B8EA29F47B2765CED53CB1552AE6422C98974C8D4DA8869F8\"\tisSuccessful\tYes\tboolean\tWhether the transaction succeeded or failed.\ttrue\tmemo\tYes\tstring\tA note the user added while making the transaction. Maybe be empty (\"\").\t\"I owed you 1.5 ATOM since you paid for lunch.\"\tfromAddress\tYes\tstring\tSender's address.\t\"cosmos1g0ffln2weg8wpzpn2hy9t2eddygqcxtvggmyhl\"\ttoAddress\tYes\tstring\tReceiver's address.\t\"cosmos1g0ffln2weg8wpzpn2hy9t2eddygqcxtvggmyhl\"\tdenomination\tYes\tstring\tThe denomination of the token transferred.\t\"uatom\"\tquantity\tYes\tstring\tThe quantity of denomination transferred.\t\"100\"\tsrcPort\tYes\tstring\tIBC port used.\t\"transfer\"\tsrcChannel\tYes\tstring\tIBC channel used.\t\"channel-42\"","example#Example":"{\n\"__type\": \"cosmos.ibc.send\",\n\"blockchain\": \"juno\",\n\"txHash\": \"DBAD2F68E6CEF64B8EA29F47B2765CED53CB1552AE6422C98974C8D4DA8869F8\",\n\"isSuccessful\": true,\n\"memo\": \"\",\n\"fromAddress\": \"like1qurwvswpwjl80aa4aeecvj2q2l9gktnymqq8dq\",\n\"toAddress\": \"like156sc4gyx8qm7896q5yqh707fcy9tqwqtezsazl\",\n\"denomination\": \"uatom\",\n\"quantity\": \"100\",\n\"srcPort\": \"transfer\",\n\"srcChannel\": \"channel-42\"\n}"}},"/msgs/lockup/lock":{"title":"cosmos.lockup.lock","data":{"":"An account locked up their tokens for a specified duration.","schema#Schema":"Field\tRequired\tData type\tExplanation\tExample\t__type\tYes\tstring\tAlways \"cosmos.lockup.lock\".\t\"cosmos.lockup.lock\"\tblockchain\tYes\tstring\tThe blockchain this transaction was executed on. This field will have one of the values in the ID column where the Ecosystem column's value is Cosmos.\t\"juno\"\ttxHash\tYes\tstring\tThe transaction's hash.\t\"DBAD2F68E6CEF64B8EA29F47B2765CED53CB1552AE6422C98974C8D4DA8869F8\"\tisSuccessful\tYes\tboolean\tWhether the transaction succeeded or failed.\ttrue\tmemo\tYes\tstring\tA note the user added while making the transaction. Maybe be empty (\"\").\t\"I owed you 1.5 ATOM since you paid for lunch.\"\towner\tYes\tstring\tExecutor's address\t\"bitsong1jv4r79zsfkg3m3mdafg4uxyxg4z9fn3u8kjmh2\"\ttokens\tYes\tarray of tokens\tThe tokens that were locked up.\t\tdurationInSecs\tYes\tnumber\tThe number of seconds the account locked up their tokens for.\t1209600","token#token":"Field\tRequired\tData type\tExplanation\tExample\tdenomination\tYes\tstring\t\t\"uatom\"\tquantity\tYes\tstring\t\t\"100\"","example#Example":"{\n\"__type\": \"cosmos.lockup.lock\",\n\"blockchain\": \"juno\",\n\"txHash\": \"DBAD2F68E6CEF64B8EA29F47B2765CED53CB1552AE6422C98974C8D4DA8869F8\",\n\"isSuccessful\": true,\n\"memo\": \"\",\n\"owner\": \"bitsong1jv4r79zsfkg3m3mdafg4uxyxg4z9fn3u8kjmh2\",\n\"tokens\": [\n{\n\"denomination\": \"uatom\",\n\"quantity\": \"100\"\n},\n{\n\"denomination\": \"uosmo\",\n\"quantity\": \"200\"\n}\n],\n\"durationInSecs\": 1209600\n}"}},"/msgs/lockup/unlock-all":{"title":"cosmos.lockup.unlockAll","data":{"":"An account began the unbonding period for every lock they have so that they can withdraw their tokens from the LPs after the respective lockup periods.","schema#Schema":"Field\tRequired\tData type\tExplanation\tExample\t__type\tYes\tstring\tAlways \"cosmos.lockup.unlockAll\".\t\"cosmos.lockup.unlockAll\"\tblockchain\tYes\tstring\tThe blockchain this transaction was executed on. This field will have one of the values in the ID column where the Ecosystem column's value is Cosmos.\t\"juno\"\ttxHash\tYes\tstring\tThe transaction's hash.\t\"DBAD2F68E6CEF64B8EA29F47B2765CED53CB1552AE6422C98974C8D4DA8869F8\"\tisSuccessful\tYes\tboolean\tWhether the transaction succeeded or failed.\ttrue\tmemo\tYes\tstring\tA note the user added while making the transaction. Maybe be empty (\"\").\t\"I owed you 1.5 ATOM since you paid for lunch.\"\towner\tYes\tstring\tExecutor's address\t\"bitsong1jv4r79zsfkg3m3mdafg4uxyxg4z9fn3u8kjmh2\"","example#Example":"{\n\"__type\": \"cosmos.lockup.unlockAll\",\n\"blockchain\": \"juno\",\n\"txHash\": \"DBAD2F68E6CEF64B8EA29F47B2765CED53CB1552AE6422C98974C8D4DA8869F8\",\n\"isSuccessful\": true,\n\"memo\": \"\",\n\"owner\": \"bitsong1jv4r79zsfkg3m3mdafg4uxyxg4z9fn3u8kjmh2\"\n}"}},"/msgs/lockup/unlock":{"title":"cosmos.lockup.unlock","data":{"":"The account began the unbonding period of the lock so that they can withdraw their tokens from the LP after the lockup period.","schema#Schema":"Field\tRequired\tData type\tExplanation\tExample\t__type\tYes\tstring\tAlways \"cosmos.lockup.unlock\".\t\"cosmos.lockup.unlock\"\tblockchain\tYes\tstring\tThe blockchain this transaction was executed on. This field will have one of the values in the ID column where the Ecosystem column's value is Cosmos.\t\"juno\"\ttxHash\tYes\tstring\tThe transaction's hash.\t\"DBAD2F68E6CEF64B8EA29F47B2765CED53CB1552AE6422C98974C8D4DA8869F8\"\tisSuccessful\tYes\tboolean\tWhether the transaction succeeded or failed.\ttrue\tmemo\tYes\tstring\tA note the user added while making the transaction. Maybe be empty (\"\").\t\"I owed you 1.5 ATOM since you paid for lunch.\"\towner\tYes\tstring\tExecutor's address\t\"bitsong1jv4r79zsfkg3m3mdafg4uxyxg4z9fn3u8kjmh2\"\tlock\tYes\tnumber\tLock ID\t12","example#Example":"{\n\"__type\": \"cosmos.lockup.unlock\",\n\"blockchain\": \"juno\",\n\"txHash\": \"DBAD2F68E6CEF64B8EA29F47B2765CED53CB1552AE6422C98974C8D4DA8869F8\",\n\"isSuccessful\": true,\n\"memo\": \"\",\n\"owner\": \"bitsong1jv4r79zsfkg3m3mdafg4uxyxg4z9fn3u8kjmh2\",\n\"lock\": 12\n}"}},"/msgs/near/social/follow":{"title":"near.social.set.follow","data":{"":"An account on near social followed another account.","schema#Schema":"Field\tRequired\tData type\tExplanation\tExample\t__type\tYes\tstring\tAlways \"near.social.set.follow\".\t\"near.social.set.follow\"\tblockchain\tYes\tstring\tThe blockchain this transaction was executed on. This field will have one of the values in the ID column where the Ecosystem column's value is Near.\t\"near\"\ttxHash\tYes\tstring\tThe transaction's hash.\t\"2AhNGN5fnuGfP1K1xcgqAz2dKAE9Xns9RWY7HKsFbBka\"\tisSuccessful\tYes\tboolean\tWhether the transaction succeeded or failed.\ttrue\tsenderId\tYes\tstring\tNear address of the sender\tsamvelraja.near\treceiverId\tYes\tstring\tNear address of the receiver.\t\"near-dapps.near\"\tdata\tYes\tstring\tdata.\t{ 'samvelraja.near': { graph: [Object], index: [Object] } }","example#Example":"{\n\"blockchain\": \"near\",\n\"txHash\": \"2AhNGN5fnuGfP1K1xcgqAz2dKAE9Xns9RWY7HKsFbBka\",\n\"isSuccessful\": true,\n\"__type\": \"near.social.set.follow\",\n\"senderId\": \"samvelraja.near\",\n\"receiverId\": \"near-dapps.near\",\n\"data\": {\n\"samvelraja.near\": {\n\"graph\": [\nnull\n],\n\"index\": [\nnull\n]\n}\n}\n}"}},"/msgs/near/social/like":{"title":"near.social.set.like","data":{"":"An account on near social liked a post.","schema#Schema":"Field\tRequired\tData type\tExplanation\tExample\t__type\tYes\tstring\tAlways \"near.social.set.like\".\t\"near.social.set.like\"\tblockchain\tYes\tstring\tThe blockchain this transaction was executed on. This field will have one of the values in the ID column where the Ecosystem column's value is Near.\t\"near\"\ttxHash\tYes\tstring\tThe transaction's hash.\t\"2AhNGN5fnuGfP1K1xcgqAz2dKAE9Xns9RWY7HKsFbBka\"\tisSuccessful\tYes\tboolean\tWhether the transaction succeeded or failed.\ttrue\tsenderId\tYes\tstring\tNear address of the sender\tsamvelraja.near\treceiverId\tYes\tstring\tNear address of the receiver.\t\"near-dapps.near\"\tdata\tYes\tstring\tdata.\t{ 'samvelraja.near': { graph: [Object], index: [Object] } }","example#Example":"{\n\"blockchain\": \"near\",\n\"txHash\": \"2AhNGN5fnuGfP1K1xcgqAz2dKAE9Xns9RWY7HKsFbBka\",\n\"isSuccessful\": true,\n\"__type\": \"near.social.set.like\",\n\"senderId\": \"samvelraja.near\",\n\"receiverId\": \"near-dapps.near\",\n\"data\": {\n\"samvelraja.near\": {\n\"graph\": [\nnull\n],\n\"index\": [\nnull\n]\n}\n}\n}"}},"/msgs/near/social/poke":{"title":"near.social.set.poke","data":{"":"An account on near social poked another account.","schema#Schema":"Field\tRequired\tData type\tExplanation\tExample\t__type\tYes\tstring\tAlways \"near.social.set.poke\".\t\"near.social.set.poke\"\tblockchain\tYes\tstring\tThe blockchain this transaction was executed on. This field will have one of the values in the ID column where the Ecosystem column's value is Near.\t\"near\"\ttxHash\tYes\tstring\tThe transaction's hash.\t\"2AhNGN5fnuGfP1K1xcgqAz2dKAE9Xns9RWY7HKsFbBka\"\tisSuccessful\tYes\tboolean\tWhether the transaction succeeded or failed.\ttrue\tsenderId\tYes\tstring\tNear address of the sender\tsamvelraja.near\treceiverId\tYes\tstring\tNear address of the receiver.\t\"near-dapps.near\"\tdata\tYes\tstring\tdata.\t{ 'samvelraja.near': { graph: [Object], index: [Object] } }","example#Example":"{\n\"blockchain\": \"near\",\n\"txHash\": \"2AhNGN5fnuGfP1K1xcgqAz2dKAE9Xns9RWY7HKsFbBka\",\n\"isSuccessful\": true,\n\"__type\": \"near.social.set.poke\",\n\"senderId\": \"samvelraja.near\",\n\"receiverId\": \"near-dapps.near\",\n\"data\": {\n\"samvelraja.near\": {\n\"graph\": [\nnull\n],\n\"index\": [\nnull\n]\n}\n}\n}"}},"/msgs/near/social/set":{"title":"near.social.set","data":{"":"An account has committed data to social DB.","schema#Schema":"Field\tRequired\tData type\tExplanation\tExample\t__type\tYes\tstring\tAlways \"near.social.set\".\t\"near.social.set\"\tblockchain\tYes\tstring\tThe blockchain this transaction was executed on. This field will have one of the values in the ID column where the Ecosystem column's value is Near.\t\"near\"\ttxHash\tYes\tstring\tThe transaction's hash.\t\"2AhNGN5fnuGfP1K1xcgqAz2dKAE9Xns9RWY7HKsFbBka\"\tisSuccessful\tYes\tboolean\tWhether the transaction succeeded or failed.\ttrue\tsenderId\tYes\tstring\tNear address of the sender\tsamvelraja.near\treceiverId\tYes\tstring\tAlways \"social.near\".\t\"social.near\"\tdata\tYes\tstring\tdata.\t{ 'samvelraja.near': { graph: [Object], index: [Object] } }","example#Example":"{\n\"blockchain\": \"near\",\n\"txHash\": \"2AhNGN5fnuGfP1K1xcgqAz2dKAE9Xns9RWY7HKsFbBka\",\n\"isSuccessful\": true,\n\"__type\": \"near.social.set\",\n\"senderId\": \"samvelraja.near\",\n\"receiverId\": \"social.near\",\n\"data\": {\n\"samvelraja.near\": {\n\"graph\": [\nnull\n],\n\"index\": [\nnull\n]\n}\n}\n}"}},"/msgs/near/staking/stake":{"title":"near.staking.stake","data":{"":"An account staked tokens to a validator.","schema#Schema":"Field\tRequired\tData type\tExplanation\tExample\t__type\tYes\tstring\tAlways \"near.staking.stake\".\t\"near.staking.stake\"\tdelegator\tYes\tstring\tNear address of the user who staked.\tiloveleapwallet.near\tvalidator\tYes\tstring\tNear address of the validator.\t\"staked.poolv1.near\"\tquantity\tYes\tstring\tamount of near that has been staked in yoctoNear.\t\"100000000000000000000000\"","example#Example":"{\n\"__type\": \"near.staking.stake\",\n\"delegator\": \"iloveleapwallet.near\",\n\"validator\": \"staked.poolv1.near\",\n\"quantity\": \"100000000000000000000000\",\n}"}},"/msgs/near/staking/unstake-all":{"title":"near.staking.unstakeAll","data":{"":"An account unstaked all the tokens from a validator.","schema#Schema":"Field\tRequired\tData type\tExplanation\tExample\t__type\tYes\tstring\tAlways \"near.staking.unstakeAll\".\t\"near.staking.unstakeAll\"\tdelegator\tYes\tstring\tNear address of the user who staked.\tiloveleapwallet.near\tvalidator\tYes\tstring\tNear address of the validator.\t\"staked.poolv1.near\"","example#Example":"{\n\"__type\": \"near.staking.unstakeAll\",\n\"delegator\": \"iloveleapwallet.near\",\n\"validator\": \"staked.poolv1.near\"\n}"}},"/msgs/near/staking/unstake":{"title":"near.staking.unstake","data":{"":"An account unstaked tokens from a validator.","schema#Schema":"Field\tRequired\tData type\tExplanation\tExample\t__type\tYes\tstring\tAlways \"near.staking.unstake\".\t\"near.staking.unstake\"\tdelegator\tYes\tstring\tNear address of the user who staked.\tiloveleapwallet.near\tvalidator\tYes\tstring\tNear address of the validator.\t\"staked.poolv1.near\"\tquantity\tYes\tstring\tamount of near that has been unstaked in yoctoNear.\t\"100000000000000000000000\"","example#Example":"{\n\"__type\": \"near.staking.unstake\",\n\"delegator\": \"iloveleapwallet.near\",\n\"validator\": \"staked.poolv1.near\",\n\"quantity\": \"100000000000000000000000\",\n}"}},"/msgs/near/staking/withdraw-all":{"title":"near.staking.withdrawAll","data":{"":"An account withdrew all the available tokens.","schema#Schema":"Field\tRequired\tData type\tExplanation\tExample\t__type\tYes\tstring\tAlways \"near.staking.withdrawAll\".\t\"near.staking.withdrawAll\"\tdelegator\tYes\tstring\tNear address of the user who staked.\tiloveleapwallet.near\tvalidator\tYes\tstring\tNear address of the validator.\t\"staked.poolv1.near\"","example#Example":"{\n\"__type\": \"near.staking.withdrawAll\",\n\"delegator\": \"iloveleapwallet.near\",\n\"validator\": \"staked.poolv1.near\"\n}"}},"/msgs/near/transfer/native":{"title":"near.transfer.native","data":{"":"An account transferred near to another account.","schema#Schema":"Field\tRequired\tData type\tExplanation\tExample\t__type\tYes\tstring\tAlways \"near.transfer.native\".\t\"near.transfer.native\"\tfromAddress\tYes\tstring\tNear address of the Sender.\tiloveleapwallet.near\ttoAddress\tYes\tstring\tNear address of the Receiver.\t\"staked.poolv1.near\"\tquantity\tYes\tstring\tamount of near that has been transferred in yoctoNear.\t\"100000000000000000000000\"","example#Example":"{\n\"__type\": \"near.transfer.native\",\n\"fromAddress\": \"iloveleapwallet.near\",\n\"toAddress\": \"staked.poolv1.near\",\n\"quantity\": \"100000000000000000000000\",\n}"}},"/msgs/near/transfer/non-native":{"title":"near.transfer.nonNative","data":{"":"An account transferred non near tokens to a another account.","schema#Schema":"Field\tRequired\tData type\tExplanation\tExample\t__type\tYes\tstring\tAlways \"near.transfer.nonNative\".\t\"near.transfer.nonNative\"\tfromAddress\tYes\tstring\tNear address of the Sender.\tiloveleapwallet.near\ttoAddress\tYes\tstring\tNear address of the Receiver.\t\"staked.poolv1.near\"\tquantity\tYes\tstring\tamount of near that has been transferred in yoctoNear.\t\"100000000000000000000000\"\ttoken\tYes\tstring\tNear address of the token transferred.\t\"token.v2.ref-finance.near\"","example#Example":"{\n\"__type\": \"near.transfer.nonNative\",\n\"fromAddress\": \"iloveleapwallet.near\",\n\"toAddress\": \"staked.poolv1.near\",\n\"quantity\": \"100000000000000000000000\",\n\"token\": \"token.v2.ref-finance.near\",\n}"}},"/msgs/slashing/unjail":{"title":"cosmos.slashing.unjail","data":{"":"A validator's attempt to get unjailed.When a validator has too much downtime, it gets automatically unbonded. If it wishes to come back online, it must unjail itself.","schema#Schema":"Field\tRequired\tData type\tExplanation\tExample\t__type\tYes\tstring\tAlways \"cosmos.slashing.unjail\".\t\"cosmos.slashing.unjail\"\tblockchain\tYes\tstring\tThe blockchain this transaction was executed on. This field will have one of the values in the ID column where the Ecosystem column's value is Cosmos.\t\"juno\"\ttxHash\tYes\tstring\tThe transaction's hash.\t\"DBAD2F68E6CEF64B8EA29F47B2765CED53CB1552AE6422C98974C8D4DA8869F8\"\tisSuccessful\tYes\tboolean\tWhether the transaction succeeded or failed.\ttrue\tmemo\tYes\tstring\tA note the user added while making the transaction. Maybe be empty (\"\").\t\"I owed you 1.5 ATOM since you paid for lunch.\"\tvalidator\tYes\tstring\tValidator's address\t\"baseledgervaloper1ehm6d95zd3fmzztyne3z9638uf9kuj44jygpkt\"","example#Example":"{\n\"__type\": \"cosmos.slashing.unjail\",\n\"blockchain\": \"juno\",\n\"txHash\": \"DBAD2F68E6CEF64B8EA29F47B2765CED53CB1552AE6422C98974C8D4DA8869F8\",\n\"isSuccessful\": true,\n\"memo\": \"\",\n\"validator\": \"baseledgervaloper1ehm6d95zd3fmzztyne3z9638uf9kuj44jygpkt\"\n}"}},"/msgs/staking/begin-redelegate":{"title":"cosmos.staking.beginRedelegate","data":{"":"A transaction where a delegator moved their delegation to a different validator.","schema#Schema":"| Field              | Required | Data type | Explanation                                                                                                                                                                                   | Example                                                              |\n| ------------------ | :------: | --------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | -------------------------------------------------------------------- | --------------------------------------------------------- |\n| __type           |   Yes    | string  | Always \"cosmos.staking.beginRedelegate\".                                                                                                                                                    | \"cosmos.staking.beginRedelegate\"                                   |\n| blockchain       |   Yes    | string  | The blockchain this transaction was executed on. This field will have one of the values in the ID column where the Ecosystem column's value is Cosmos. | \"juno\"                                                             |\n| txHash           |   Yes    | string  | The transaction's hash.                                                                                                                                                                       | \"DBAD2F68E6CEF64B8EA29F47B2765CED53CB1552AE6422C98974C8D4DA8869F8\" |\n| isSuccessful     |   Yes    | boolean | Whether the transaction succeeded or failed.                                                                                                                                                  | true                                                               |\n| memo             |   Yes    | string  | A note the user added while making the transaction. Maybe be empty (\"\").                                                                                                                    | \"I owed you 1.5 ATOM since you paid for lunch.\"                    |\n| delegatorAddress |   Yes    | string  | Delegator's address                                                                                                                                                                           | \"bitsong160rddm8k5yy2psshx65gwj26gzr8ww27skxe7m\"                   |\n| fromValidator    |   Yes    | string  | The address of the validator the delegation was previously for.                                                                                                                               | \"bitsongvaloper18wf0w252jxk3kgl5vlst8ttat8xzfnvejuftk2\"            |\n| toValidator      |   Yes    | string  | The address of the validator who is to receive the delegation.                                                                                                                                |                                                                      | \"bitsongvaloper18wf0w252jxk3kgl5vlst8ttat8xzfnvejuftk2\" |\n| denomination     |   Yes    | string  | The denomination of the token undelegated.                                                                                                                                                    | \"uatom\"                                                            |\n| quantity         |   Yes    | string  | The quantity of denomination undelegated.                                                                                                                                                   | \"100\"                                                              |","example#Example":"{\n\"__type\": \"cosmos.staking.beginRedelegate\",\n\"blockchain\": \"juno\",\n\"txHash\": \"DBAD2F68E6CEF64B8EA29F47B2765CED53CB1552AE6422C98974C8D4DA8869F8\",\n\"isSuccessful\": true,\n\"memo\": \"\",\n\"delegatorAddress\": \"bitsong160rddm8k5yy2psshx65gwj26gzr8ww27skxe7m\",\n\"fromValidator\": \"bitsongvaloper18wf0w252jxk3kgl5vlst8ttat8xzfnvejuftk2\",\n\"toValidator\": \"bitsongvaloper18wf0w252jxk3kgl5vlst8ttat8xzfnvejuftk2\",\n\"denomination\": \"uatom\",\n\"quantity\": \"100\"\n}"}},"/msgs/staking/create-validator":{"title":"cosmos.staking.createValidator","data":{"":"A transaction which created a validator.","schema#Schema":"Field\tRequired\tData type\tExplanation\tExample\t__type\tYes\tstring\tAlways \"cosmos.staking.createValidator\".\t\"cosmos.staking.createValidator\"\tblockchain\tYes\tstring\tThe blockchain this transaction was executed on. This field will have one of the values in the ID column where the Ecosystem column's value is Cosmos.\t\"juno\"\ttxHash\tYes\tstring\tThe transaction's hash.\t\"DBAD2F68E6CEF64B8EA29F47B2765CED53CB1552AE6422C98974C8D4DA8869F8\"\tisSuccessful\tYes\tboolean\tWhether the transaction succeeded or failed.\ttrue\tmemo\tYes\tstring\tA note the user added while making the transaction. Maybe be empty (\"\").\t\"I owed you 1.5 ATOM since you paid for lunch.\"\tmoniker\tYes\tstring\tA human-readable name for the validator.\t\"TC Network\"\tidentity\tNo\tstring\tAn identity signature such as one from Keybase.\t\twebsite\tNo\tstring\t\t\"https://tcnetwork.io\"\tsecurityContact\tNo\tstring\tAn email address to contact the validator operator by.\t\"validator@example.com\"\tdetails\tNo\tstring\t\t\"TC Network is a group providing staking service, building the dApp and more for Cosmos projects\"\trate\tYes\tstring\tThe commission rate charged to delegators. This is a number in the range of 0 and 1.\t\"0.050000000000000000\"\tmaxRate\tYes\tstring\tThe max commission rate which the validator can charge. This is a number in the range of 0 and 1.\t\"0.100000000000000000\"\tmaxChangeRate\tYes\tstring\tThe max the validator can increase the rate by on a daily basis. This is a number in the range of 0 and 1.\t\"0.010000000000000000\"\tminSelfDelegation\tYes\tstring\tThe minimum quantity of tokens that the validator must self delegate.\t\"1\"\tvalidatorAddress\tYes\tstring\tValidator's address\t\"agoricvaloper188xyq72fveuuvgk7lkht964jhgtc2cw00lf2zn\"","example#Example":"{\n\"__type\": \"cosmos.staking.createValidator\",\n\"blockchain\": \"juno\",\n\"txHash\": \"DBAD2F68E6CEF64B8EA29F47B2765CED53CB1552AE6422C98974C8D4DA8869F8\",\n\"isSuccessful\": true,\n\"memo\": \"\",\n\"moniker\": \"TC Network\",\n\"website\": \"https://tcnetwork.io\",\n\"securityContact\": \"validator@example.com\",\n\"details\": \"TC Network is a group providing staking service, building the dApp and more for Cosmos projects\",\n\"rate\": \"0.050000000000000000\",\n\"maxRate\": \"0.100000000000000000\",\n\"maxChangeRate\": \"0.010000000000000000\",\n\"minSelfDelegation\": \"1\",\n\"validatorAddress\": \"agoricvaloper188xyq72fveuuvgk7lkht964jhgtc2cw00lf2zn\"\n}"}},"/msgs/staking/delegate":{"title":"cosmos.staking.delegate","data":{"":"An account delegated tokens to a validator.","schema#Schema":"Field\tRequired\tData type\tExplanation\tExample\t__type\tYes\tstring\tAlways \"cosmos.staking.delegate\".\t\"cosmos.staking.delegate\"\tblockchain\tYes\tstring\tThe blockchain this transaction was executed on. This field will have one of the values in the ID column where the Ecosystem column's value is Cosmos.\t\"juno\"\ttxHash\tYes\tstring\tThe transaction's hash.\t\"DBAD2F68E6CEF64B8EA29F47B2765CED53CB1552AE6422C98974C8D4DA8869F8\"\tisSuccessful\tYes\tboolean\tWhether the transaction succeeded or failed.\ttrue\tmemo\tYes\tstring\tA note the user added while making the transaction. Maybe be empty (\"\").\t\"I owed you 1.5 ATOM since you paid for lunch.\"\tdelegatorAddress\tYes\tstring\tDelegator's address\t\"bitsong160rddm8k5yy2psshx65gwj26gzr8ww27skxe7m\"\tvalidatorAddress\tYes\tstring\tValidator's address\t\"bitsongvaloper18wf0w252jxk3kgl5vlst8ttat8xzfnvejuftk2\"\tdenomination\tYes\tstring\tThe denomination of the token delegated.\t\"uatom\"\tquantity\tYes\tstring\tThe quantity of denomination delegated.\t\"100\"","example#Example":"{\n\"__type\": \"cosmos.staking.delegate\",\n\"blockchain\": \"juno\",\n\"txHash\": \"DBAD2F68E6CEF64B8EA29F47B2765CED53CB1552AE6422C98974C8D4DA8869F8\",\n\"isSuccessful\": true,\n\"memo\": \"\",\n\"delegatorAddress\": \"bitsong160rddm8k5yy2psshx65gwj26gzr8ww27skxe7m\",\n\"validatorAddress\": \"bitsongvaloper18wf0w252jxk3kgl5vlst8ttat8xzfnvejuftk2\",\n\"denomination\": \"uatom\",\n\"quantity\": \"100\"\n}"}},"/msgs/staking/edit-validator":{"title":"cosmos.staking.editValidator","data":{"":"A transaction which updated a validator's details such as its website.","schema#Schema":"If an optional field's value is a string, then its value was updated. For example, if the moniker field's value is \"new-name\", then the validator changed its human-readable name.\nIf an optional field is absent, then its value wasn't updated. For example, if the moniker field was absent, then the validator's human-readable name wasn't updated.\nIf an optional field's value is null, then its value was removed. For example, if the identity field's value is null, then the validator is no longer associated with an identity.\n\n\nField\tRequired\tData type\tExplanation\tExample\t__type\tYes\tstring\tAlways \"cosmos.staking.editValidator\".\t\"cosmos.staking.editValidator\"\tblockchain\tYes\tstring\tThe blockchain this transaction was executed on. This field will have one of the values in the ID column where the Ecosystem column's value is Cosmos.\t\"juno\"\ttxHash\tYes\tstring\tThe transaction's hash.\t\"DBAD2F68E6CEF64B8EA29F47B2765CED53CB1552AE6422C98974C8D4DA8869F8\"\tisSuccessful\tYes\tboolean\tWhether the transaction succeeded or failed.\ttrue\tmemo\tYes\tstring\tA note the user added while making the transaction. Maybe be empty (\"\").\t\"I owed you 1.5 ATOM since you paid for lunch.\"\tmoniker\tNo\tstring\tA human-readable name for the validator.\t\"TC Network\"\tidentity\tNo\tstring or null\tAn identity signature such as one from Keybase.\t\twebsite\tNo\tstring or null\t\t\"https://tcnetwork.io\"\tsecurityContact\tNo\tstring or null\tAn email address to contact the validator operator by.\t\"validator@example.com\"\tdetails\tNo\tstring or null\t\t\"TC Network is a group providing staking service, building the dApp and more for Cosmos projects\"\tvalidatorAddress\tYes\tstring\tValidator's address\t\"agoricvaloper188xyq72fveuuvgk7lkht964jhgtc2cw00lf2zn\"","example#Example":"{\n\"__type\": \"cosmos.staking.editValidator\",\n\"blockchain\": \"juno\",\n\"txHash\": \"DBAD2F68E6CEF64B8EA29F47B2765CED53CB1552AE6422C98974C8D4DA8869F8\",\n\"isSuccessful\": true,\n\"memo\": \"\",\n\"moniker\": \"TC Network\",\n\"website\": \"https://tcnetwork.io\",\n\"securityContact\": null,\n\"validatorAddress\": \"agoricvaloper188xyq72fveuuvgk7lkht964jhgtc2cw00lf2zn\"\n}"}},"/msgs/staking/undelegate":{"title":"cosmos.staking.undelegate","data":{"":"A transaction where a delegator undelegated their coins from a validator.","schema#Schema":"Field\tRequired\tData type\tExplanation\tExample\t__type\tYes\tstring\tAlways \"cosmos.staking.undelegate\".\t\"cosmos.staking.undelegate\"\tblockchain\tYes\tstring\tThe blockchain this transaction was executed on. This field will have one of the values in the ID column where the Ecosystem column's value is Cosmos.\t\"juno\"\ttxHash\tYes\tstring\tThe transaction's hash.\t\"DBAD2F68E6CEF64B8EA29F47B2765CED53CB1552AE6422C98974C8D4DA8869F8\"\tisSuccessful\tYes\tboolean\tWhether the transaction succeeded or failed.\ttrue\tmemo\tYes\tstring\tA note the user added while making the transaction. Maybe be empty (\"\").\t\"I owed you 1.5 ATOM since you paid for lunch.\"\tdelegatorAddress\tYes\tstring\tDelegator's address\t\"bitsong160rddm8k5yy2psshx65gwj26gzr8ww27skxe7m\"\tvalidatorAddress\tYes\tstring\tValidator's address\t\"bitsongvaloper18wf0w252jxk3kgl5vlst8ttat8xzfnvejuftk2\"\tdenomination\tYes\tstring\tThe denomination of the coin undelegated.\t\"uatom\"\tquantity\tYes\tstring\tThe quantity of denomination undelegated.\t\"100\"","example#Example":"{\n\"__type\": \"cosmos.staking.undelegate\",\n\"blockchain\": \"juno\",\n\"txHash\": \"DBAD2F68E6CEF64B8EA29F47B2765CED53CB1552AE6422C98974C8D4DA8869F8\",\n\"isSuccessful\": true,\n\"memo\": \"\",\n\"delegatorAddress\": \"bitsong160rddm8k5yy2psshx65gwj26gzr8ww27skxe7m\",\n\"validatorAddress\": \"bitsongvaloper18wf0w252jxk3kgl5vlst8ttat8xzfnvejuftk2\",\n\"denomination\": \"uatom\",\n\"quantity\": \"100\"\n}"}},"/msgs/superfluid/delegate":{"title":"cosmos.superfluid.delegate","data":{"":"An account delegated their OSMO tokens using a lock to a validator.","schema#Schema":"Field\tRequired\tData type\tExplanation\tExample\t__type\tYes\tstring\tAlways \"cosmos.superfluid.delegate\".\t\"cosmos.superfluid.delegate\"\tblockchain\tYes\tstring\tThe blockchain this transaction was executed on. This field will have one of the values in the ID column where the Ecosystem column's value is Cosmos.\t\"juno\"\ttxHash\tYes\tstring\tThe transaction's hash.\t\"DBAD2F68E6CEF64B8EA29F47B2765CED53CB1552AE6422C98974C8D4DA8869F8\"\tisSuccessful\tYes\tboolean\tWhether the transaction succeeded or failed.\ttrue\tmemo\tYes\tstring\tA note the user added while making the transaction. Maybe be empty (\"\").\t\"I owed you 1.5 ATOM since you paid for lunch.\"\tsender\tYes\tstring\tDelegator's address\t\"bitsong1jv4r79zsfkg3m3mdafg4uxyxg4z9fn3u8kjmh2\"\tvalidatorAddress\tYes\tstring`\tValidator's address\t\"osmovaloper1hjct6q7npsspsg3dgvzk3sdf89spmlpf6t4agt\"\tlockId\tYes\tnumber\tLock's ID\t1209600","example#Example":"{\n\"__type\": \"cosmos.superfluid.delegate\",\n\"blockchain\": \"juno\",\n\"txHash\": \"DBAD2F68E6CEF64B8EA29F47B2765CED53CB1552AE6422C98974C8D4DA8869F8\",\n\"isSuccessful\": true,\n\"memo\": \"\",\n\"sender\": \"bitsong1jv4r79zsfkg3m3mdafg4uxyxg4z9fn3u8kjmh2\",\n\"validatorAddress\": \"osmovaloper1hjct6q7npsspsg3dgvzk3sdf89spmlpf6t4agt\",\n\"lockId\": 1209600\n}"}},"/msgs/superfluid/lock-and-delegate":{"title":"cosmos.superfluid.lockAndDelegate","data":{"":"An account locked their tokens, and delegated to a validator.","schema#Schema":"Field\tRequired\tData type\tExplanation\tExample\t__type\tYes\tstring\tAlways \"cosmos.superfluid.lockAndDelegate\".\t\"cosmos.superfluid.lockAndDelegate\"\tblockchain\tYes\tstring\tThe blockchain this transaction was executed on. This field will have one of the values in the ID column where the Ecosystem column's value is Cosmos.\t\"juno\"\ttxHash\tYes\tstring\tThe transaction's hash.\t\"DBAD2F68E6CEF64B8EA29F47B2765CED53CB1552AE6422C98974C8D4DA8869F8\"\tisSuccessful\tYes\tboolean\tWhether the transaction succeeded or failed.\ttrue\tmemo\tYes\tstring\tA note the user added while making the transaction. Maybe be empty (\"\").\t\"I owed you 1.5 ATOM since you paid for lunch.\"\tsender\tYes\tstring\tAccount's address\t\"bitsong1jv4r79zsfkg3m3mdafg4uxyxg4z9fn3u8kjmh2\"\tvalidatorAddress\tYes\tstring`\tValidator's address\t\"osmovaloper1hjct6q7npsspsg3dgvzk3sdf89spmlpf6t4agt\"\ttokens\tYes\tarray of tokens\tTokens locked","token#token":"Field\tRequired\tData type\tExplanation\tExample\tdenomination\tYes\tstring\t\t\"uatom\"\tquantity\tYes\tstring\t\t\"100\"","example#Example":"{\n\"__type\": \"cosmos.superfluid.lockAndDelegate\",\n\"blockchain\": \"juno\",\n\"txHash\": \"DBAD2F68E6CEF64B8EA29F47B2765CED53CB1552AE6422C98974C8D4DA8869F8\",\n\"isSuccessful\": true,\n\"memo\": \"\",\n\"sender\": \"bitsong1jv4r79zsfkg3m3mdafg4uxyxg4z9fn3u8kjmh2\",\n\"validatorAddress\": \"osmovaloper1hjct6q7npsspsg3dgvzk3sdf89spmlpf6t4agt\",\n\"tokens\": [\n{\n\"denomination\": \"uatom\",\n\"quantity\": \"100\"\n},\n{\n\"denomination\": \"uosmo\",\n\"quantity\": \"200\"\n}\n]\n}"}},"/msgs/superfluid/undelegate":{"title":"cosmos.superfluid.undelegate","data":{"":"An account undelegated their OSMO tokens using the lock from the validator.","schema#Schema":"Field\tRequired\tData type\tExplanation\tExample\t__type\tYes\tstring\tAlways \"cosmos.superfluid.undelegate\".\t\"cosmos.superfluid.undelegate\"\tblockchain\tYes\tstring\tThe blockchain this transaction was executed on. This field will have one of the values in the ID column where the Ecosystem column's value is Cosmos.\t\"juno\"\ttxHash\tYes\tstring\tThe transaction's hash.\t\"DBAD2F68E6CEF64B8EA29F47B2765CED53CB1552AE6422C98974C8D4DA8869F8\"\tisSuccessful\tYes\tboolean\tWhether the transaction succeeded or failed.\ttrue\tmemo\tYes\tstring\tA note the user added while making the transaction. Maybe be empty (\"\").\t\"I owed you 1.5 ATOM since you paid for lunch.\"\tsender\tYes\tstring\tDelegator's address\t\"bitsong1jv4r79zsfkg3m3mdafg4uxyxg4z9fn3u8kjmh2\"\tlockId\tYes\tnumber\tLock's ID\t1209600","example#Example":"{\n\"__type\": \"cosmos.superfluid.undelegate\",\n\"blockchain\": \"juno\",\n\"txHash\": \"DBAD2F68E6CEF64B8EA29F47B2765CED53CB1552AE6422C98974C8D4DA8869F8\",\n\"isSuccessful\": true,\n\"memo\": \"\",\n\"sender\": \"bitsong1jv4r79zsfkg3m3mdafg4uxyxg4z9fn3u8kjmh2\",\n\"lockId\": 1209600\n}"}},"/msgs/superfluid/unlock-and-undelegate":{"title":"cosmos.superfluid.unlockAndUndelegate","data":{"":"An account locked their tokens, and delegated to a validator.","schema#Schema":"Field\tRequired\tData type\tExplanation\tExample\t__type\tYes\tstring\tAlways \"cosmos.superfluid.unlockAndUndelegate\".\t\"cosmos.superfluid.unlockAndUndelegate\"\tblockchain\tYes\tstring\tThe blockchain this transaction was executed on. This field will have one of the values in the ID column where the Ecosystem column's value is Cosmos.\t\"juno\"\ttxHash\tYes\tstring\tThe transaction's hash.\t\"DBAD2F68E6CEF64B8EA29F47B2765CED53CB1552AE6422C98974C8D4DA8869F8\"\tisSuccessful\tYes\tboolean\tWhether the transaction succeeded or failed.\ttrue\tmemo\tYes\tstring\tA note the user added while making the transaction. Maybe be empty (\"\").\t\"I owed you 1.5 ATOM since you paid for lunch.\"\tsender\tYes\tstring\tAccount's address\t\"bitsong1jv4r79zsfkg3m3mdafg4uxyxg4z9fn3u8kjmh2\"\tlockId\tYes\tnumber\tLock's ID\t12","example#Example":"{\n\"__type\": \"cosmos.superfluid.unlockAndUndelegate\",\n\"blockchain\": \"juno\",\n\"txHash\": \"DBAD2F68E6CEF64B8EA29F47B2765CED53CB1552AE6422C98974C8D4DA8869F8\",\n\"isSuccessful\": true,\n\"memo\": \"\",\n\"sender\": \"bitsong1jv4r79zsfkg3m3mdafg4uxyxg4z9fn3u8kjmh2\",\n\"lockId\": 12\n}"}}}